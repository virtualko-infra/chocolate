name: Project Lifecycle

on:
  workflow_dispatch: # Trigger manually
  push:
    branches:
      - main # Trigger on push to the main branch

jobs:
  rollout:
    name: Rollout Infrastructure
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Terraform Plan
        run: |
            cd ./terraform/
            terraform init
            terraform plan
        
      - name: Terraform Apply
        run: |
              cd ./terraform
              terraform apply -auto-approve

      - name: Refresh Terraform State
        run: |
              cd ./terraform
              terraform refresh

      - name: Extract VM Public IP from Terraform Output and Update Inventory
        run: |
              # Get the public IP of the VM from Terraform
              PUBLIC_IP=$(terraform output -raw vm_public_ip)
              echo "VM Public IP: $PUBLIC_IP"

          # Update the inventory.ini file with the new public IP
              sed -i "s/^host=.*/host=$PUBLIC_IP/" ansible/inventory.ini

          # Verify the updated inventory.ini
              cat ansible/inventory.ini


  configure:
    name: Configure Infrastructure
    runs-on: ubuntu-latest
    needs: rollout # Wait for rollout to complete

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Ansible Playbook
        run: ansible-playbook -i ${{ env.PUBLIC_IP }}, playbook.yml
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false" # Disable host key checking for simplicity

  disassemble:
    name: Disassemble Infrastructure
    runs-on: ubuntu-latest
    needs: configure # Wait for configure to complete

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Destroy Terraform
        run: terraform destroy -auto-approve
